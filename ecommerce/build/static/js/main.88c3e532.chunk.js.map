{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["util","num","Number","toFixed","toLocaleString","Products","_this","this","productItems","props","products","map","product","react_default","a","createElement","className","key","id","href","concat","onClick","e","handleAddToCart","src","sku","alt","title","price","Component","color","value","sort","onChange","handleSortChange","size","handleSizeChange","Cart","cartItems","length","style","marginLeft","item","float","handleRemoveFromCart","count","reduce","c","window","open","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","filter","localStorage","setItem","JSON","stringify","productAlreadyInCart","forEach","cp","push","objectSpread","listProducts","b","filteredProducts","availableSizes","indexOf","toUpperCase","target","_this2","getItem","parse","fetch","then","res","json","catch","err","data","align","Filter_Products","Products_Products","Cart_Cart","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88c3e532.chunk.js","sourcesContent":["export default {\n    formatCurrency: function (num) {\n        return 'â‚¬' + Number(num.toFixed(1)).toLocaleString() + ' ';\n    }\n}","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Products extends Component {\n\n    render() {\n        const productItems = this.props.products.map(product => (\n            <div className=\"col-md-3\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n                    <a href={`#${product.id}`}onClick={(e)=>this.props.handleAddToCart(e, product)}>\n                        <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\n                        <p>{product.title}</p>                        \n                    </a>\n                    <b>{util.formatCurrency(product.price)}</b>\n                    <br />\n                    <button className=\"btn btn-success\" onClick={(e)=>this.props.handleAddToCart(e, product)}>Add to cart</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nexport default class Products extends Component {\n\n    render() {\n\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <label color=\"black\">Price Sort\n                        <select className=\"form-control\" value={this.props.sort} onChange={this.props.handleSortChange}>\n                                <option value=\"\">Select</option>\n                                <option value=\"lowestprice\">Ascending</option>\n                                <option value=\"highestprice\">Descending</option>\n                        </select>\n                    </label>\n                </div>\n                <div className=\"col-md-4\">\n                    <label > Size Filter\n                        <select className=\"form-control\" value={this.props.size} onChange={this.props.handleSizeChange}>\n                                <option value=\"\">ALL</option>\n                                <option value=\"x\">XS</option>\n                                <option value=\"s\">S</option>\n                                <option value=\"m\">M</option>\n                                <option value=\"l\">L</option>\n                                <option value=\"xl\">XL</option>\n                                <option value=\"xxl\">XXL</option>\n                        </select>\n                    </label>\n                </div>\n                <div className=\"col-md-4\">\n                   \n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Cart extends Component {\n    render() {\n        const { cartItems } = this.props;\n\n        return (\n            <div className=\"alert alert-info\">\n                {cartItems.length === 0\n                    ? \" Your cart is empty\" :\n                    <div>You add {cartItems.length} items to your cart. <hr /></div>\n                }\n                {cartItems.length > 0 &&\n                    <div>\n                        <ul style={{ marginLeft: 25 }}>\n                            {cartItems.map(item => (\n                                <li key={item.id}>\n                                    <b>{item.title}</b>\n                                    <button style={{ float: 'right' }} className=\"btn btn-warning btn-xs\"\n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}>Remove</button>\n                                    <br />\n                                    {item.count} X {util.formatCurrency(item.price)}\n                                </li>))\n                            }\n                        </ul>\n\n                        <b>Sum: {util.formatCurrency(cartItems.reduce((a, c) => (a + c.price * c.count), 0))}\n                        </b>\n                        <button onClick={() => window.open(\"https://www.paypal.com/fi/webapps/mpp/account-selection\", \"_self\")} className=\"btn btn-primary\">Pay</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Products from \"./components/Products\";\nimport Filter from \"./components/Filter\";\nimport Cart from \"./components/Cart\";\n\nimport \"./App.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      size: \"\",\n      sort: \"\",\n      cartItems: [],\n      products: [],\n      filteredProducts: []\n    };\n  }\n  componentWillMount() {\n    if (localStorage.getItem(\"cartItems\")) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    }\n\n    fetch(\"http://localhost:8000/products\")\n      .then(res => res.json())\n      .catch(err =>\n        fetch(\"dataBase.json\")\n          .then(res => res.json())\n          .then(data => data.products)\n      )\n      .then(data => {\n        this.setState({ products: data });\n        this.listProducts();\n      });\n  }\n\n  handleRemoveFromCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(a => a.id !== product.id);\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  };\n\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.count += 1;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  };\n\n  listProducts = () => {\n    this.setState(state => {\n      if (state.sort !== \"\") {\n        state.products.sort((a, b) =>\n          state.sort === \"lowestprice\"\n            ? a.price > b.price\n              ? 1\n              : -1\n            : a.price < b.price\n            ? 1\n            : -1\n        );\n      } else {\n        state.products.sort((a, b) => (a.id > b.id ? 1 : -1));\n      }\n      if (state.size !== \"\") {\n        return {\n          filteredProducts: state.products.filter(\n            a => a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n          )\n        };\n      }\n      return { filteredProducts: state.products };\n    });\n  };\n  handleSortChange = e => {\n    this.setState({ sort: e.target.value });\n    this.listProducts();\n  };\n  handleSizeChange = e => {\n    this.setState({ size: e.target.value });\n    this.listProducts();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 align=\"center\">Linda Hat Shop</h1>\n        <hr />\n        <div className=\"row\">\n            <Filter\n              count={this.state.filteredProducts.length}\n              handleSortChange={this.handleSortChange}\n              handleSizeChange={this.handleSizeChange}\n            />\n            \n            <hr />\n           \n            <Products\n              products={this.state.filteredProducts}\n              handleAddToCart={this.handleAddToCart}\n            />\n          \n          \n            <Cart\n              cartItems={this.state.cartItems}\n              handleRemoveFromCart={this.handleRemoveFromCart}\n            />\n             \n             \n\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}